const crypto = require('crypto');
const consola = require('consola');

class SyncHash {
  static AUTO_GENERATED_INTRO: string = '# This file is being modified by glue-ops. Do not edit manually.';

  static SYNCHRONIZATION_HASH_BASE: string = '# Synchronization-Hash:';

  static validateTargetFileHash(fileContents: string) {
    const hashCommentRegex = new RegExp(`${this.SYNCHRONIZATION_HASH_BASE} ([a-z0-9]+)`);
    const targetHash = fileContents.match(hashCommentRegex)[1];

    const valid = this.sha256(this.cleanContent(fileContents)) === targetHash;

    if (!valid) {
      consola.error('The target file has been modified and does not match it\'s Synchronization-Hash.');
      process.exit(1);
    }
  }

  static addAutogeneratedComments(sourceContents: string): string {
    const autogeneratedHash = `${this.SYNCHRONIZATION_HASH_BASE} ${this.sha256(sourceContents)}`;

    return `${this.AUTO_GENERATED_INTRO}\n${autogeneratedHash}\n\n${sourceContents}`;
  }

  private static sha256(content: string): string {
    return crypto.createHash('sha256').update(content).digest('hex');
  }

  private static cleanContent(fileContents: string): string {
    return fileContents.split('\n').slice(3).join('\n');
  }
}

export default SyncHash;
